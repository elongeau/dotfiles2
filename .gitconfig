[color]
  ui = auto
[user]
[http]
   ; proxy = http://gateway.zscaler.net:80
[https]
   ; proxy = http://gateway.zscaler.net:443
[core]
  editor = nvim
  whitespace = trailing-space,space-before-tab
  trustctime = false
  filemode = false
	pager = delta --light
  autocrlf = input
	excludesfile = /Users/emmanuellongeau/.gitignore
[pager]
  # " = true" means use pager defined in [core]
  diff     = true
  difftool = true
  log      = true
  show     = true
	log = gitmoji-log | less --tabs=4 -rFX
[diff]
  wordRegex = .
  renames = copies
  mnemonicprefix = true
  tool = vimdiff
  renameLimit = 1000
[status]
  showUntrackedFiles = all
[color]
  ui = auto
[color "branch"]
  current = yellow bold
  local = green bold
  remote = cyan bold
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = green bold
  changed = yellow bold
  untracked = red bold
[branch]
  autosetupmerge = true
[push]
	default = current
[difftool]
  prompt = false
[credential]
  helper = cache --timeout=3600
[merge]
  tool = vimdiff
[mergetool]
  keeptemporaries = false
  keepbackups = false
  prompt = false
  trustexitcode = false
[merge]
  tool = vscode
[mergetool "vscode"]
  cmd = code --wait $MERGED
[alias]
  last = log -1 --stat
  cp = cherry-pick
  co = checkout
  cl = clone
  # ci = !gitmoji -c
  ci = commit -S
  cim = commit -S -m
  st = status -sb
  br = branch
  unstage = reset HEAD --
  dc = diff --ignore-all-space --cached
  lg = "!f() { git log --color=always --format=tformat:'%C(red)%h %C(green)%ai%C(reset) %C(bold blue)%<(15,trunc)%an%C(reset) %<(79,trunc)%s %C(yellow)CHOMPABLENEWLINES%dENDOFBODY%C(reset)' --date=local $1 | gitmoji-log | gsed -re 's/CHOMPABLENEWLINESENDOFBODY//' | gsed -re 's/CHOMPABLENEWLINES(.*)/\\\n\\1/' | gsed -re 's/ENDOFBODY//'  | less --tabs=4 -rFX; }; f"
  lg5 = !git lg -5
  lgm = !git lg origin/master..
  lgd = log --graph --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n          %C(yellow)%d%Creset' --abbrev-commit
  cb = checkout -b
  cbm = "! f() { echo 'Fetch'; git fetch; git checkout -b \"$1\" origin/master; }; f"
  ap = add --patch
  sf = diff --name-only origin/develop...
  stash = stash -u
  pop = stash pop
  d = diff --ignore-all-space
  dm = !git d origin/master...
  dw = diff --ignore-all-space --color-words
  a = add
  undo = reset --soft HEAD^
  same = !git commit --amend --no-edit
  changes = diff --name-status --stat
  f = fetch
  ri = rebase -i --autosquash
  mri = rebase -i
  rom = !"echo 'Fetch origin...' && git fetch && echo 'Rebase origin/master...' && git rebase origin/master"
  fxi = !HASH=`git log --pretty=oneline origin/master.. | grep -v "fixup!" | head -30 | fzf` && git commit --fixup `echo ${HASH} | awk '{ print $1 }'`
  fx = !HASH=`git log --pretty=oneline origin/master.. | grep -v "fixup!" | head -20` && git commit --fixup `echo ${HASH} | awk '{ print $1 }'`
  cf = !"BRANCH=`git branch -a --color=always | grep -v '^*' | fzf | sed 's/^..//' | awk '{print $1}'` && git checkout `echo $BRANCH | awk '{ $1=$1 };1' | sed -E 's/remotes\\/origin\\///g'`"
  cfg = !"BRANCH=`git branch -a | grep $1 | grep -v '^*' | ipt` && echo `echo $BRANCH | sed 's/^ *//;s/ *$//' | sed -E 's/remotes\\/origin\\///g' | sed -E 's/(.*)\\s.*/\\1/g'`"
  rc = !"git rebase --continue ; git st"
  rs = !"git rebase --skip ; git st"
  ra = rebase --abort
  irb=!"git branch | grep -v '^*' | ipt -m | xargs git branch -D"
  rim= rebase -i --autosquash origin/master
  ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
  resolve = "!git diff --name-only --diff-filter=U | xargs code -n"
  pushf = push --force-with-lease
  browse = !"git config --get remote.origin.url | gsed -re 's#git@github.com:adeo/(.*).git#https://github.com/adeo/\\1/pulls#g' | xargs open"
  build = !"git config --get remote.origin.url | gsed -re 's#git@github.com:adeo/(.*).git#https://gitlab.com/adeotech/lmfr/services-platform/\\1/pipelines#g' | xargs open"
  todos = !"git changes origin/master.. | cut -f2 | xargs rg TODO 2> /dev/null"
	identity = "! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; git config user.signingkey \"$(git config user.$1.signingkey)\"; :"
  prf = "!gh pr list | rg \"^\\d*\" | fzf | cut -f1 | xargs gh pr checkout"
  prv = "!gh pr view | rg View | gsed -re 's/.*GitHub: (.*)/\\1/g' | xargs open"
[branch "master"]
  mergeoptions = --no-ff
[pull]
	rebase = true
[fetch]
  prune = true
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[rerere]
  enabled = true
[gc]
  auto = 1000
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[user]
	useConfigOnly = true
	name = Emmanuel LONGEAU
	email = emmanuel.longeau@ext.leroymerlin.fr
[user "github"]
	name = Emmanuel LONGEAU
	email = emmanuel.longeau@gmail.com
	signingkey = 848340E786B8308
[user "sfeir"]
	name = Emmanuel LONGEAU
	email = longeau.e@sfeir.com
	signingkey = 31607150DC75B6AAC
[user "lm"]
	name = Emmanuel LONGEAU
	email = emmanuel.longeau@ext.leroymerlin.fr
	signingkey = FF6135E7E0C94558
